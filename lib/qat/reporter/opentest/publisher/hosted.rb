require 'base64'
require 'zip'
require_relative 'base'

module QAT
	module Reporter
		class Opentest
			module Publisher
				class Hosted < Base
					
					def auth_token
						return @auth_token if @auth_token
						@auth_token = {
							Authorization: "Bearer #{bearer}"
						}
					end
					
					# Create a session in openTest
					# @see https://getopentest.org/reference/web-api.html#creating-a-test-session
					def create_session
						payload = {
							actorTags:     actor_tags,
							environment:   environment,
							maxIterations: 1,
							sessionLabel:  session_label,
							tests:         tests
						}
						headers = { 'Content-Type': 'application/json' }.merge(auth_token)
						
						puts payload.to_json
						Client.new(base_url).post('/api/session', payload.to_json, headers)
					end
					
					# Get session details by sessionID
					# @see https://getopentest.org/reference/web-api.html#getting-the-test-session-log
					def session_details
						headers = { 'Content-Type': 'application/json' }.merge(auth_token)
						Client.new(base_url).get("/api/session/#{session_id}", headers)
					end
				end
			end
		end
	end
end