require_relative 'publisher'

module QAT
	module Reporter
		class Opentest
			# QAT::Reporter::Xray configuration module
			module Config
				class << self
					
					attr_accessor :session_id, :open_test_url, :publisher, :session_label, :environment, :actor_tags, :tests, :bearer, :evidences
					
					DEFAULT_PUBLISHER = 'hosted'
					
					# Returns default publisher
					def default_publisher
						DEFAULT_PUBLISHER
					end
					
					# Returns the evidences
					def evidences
						@evidences
					end
					
					# Returns the bearer token
					def bearer
						@bearer
					end
					
					# Returns the tests
					def tests
						@tests
					end
					
					# Returns session label
					def session_label
						@session_label
					end
					
					# Returns the environment
					def environment
						@environment
					end
					
					# Returns the actor tags
					def actor_tags
						@actor_tags
					end
					
					# Returns the session_id
					def session_id
						@session_id
					end
					
					# Returns the open_test_url
					def open_test_url
						@open_test_url
					end
					
					# Set publisher
					def publisher=(publisher)
						@publisher = publisher
					end
					
					# Get publisher
					def publisher
						@publisher
					end
				end
			end
			
			class << self
				def configure(&block)
					yield Config
					
					QAT::Reporter::Opentest::Config.publisher = QAT::Reporter::Opentest::Publisher.const_get(QAT::Reporter::Opentest::Config.default_publisher.capitalize).new
					
					raise(OpentestUrlUndefinedError, 'Opentest URL must be defined!') unless QAT::Reporter::Opentest::Config.open_test_url
					raise(OpentestTokenUndefinedError, 'Opentest Token must be defined!') unless QAT::Reporter::Opentest::Config.bearer
					return QAT::Reporter::Opentest::Config.publisher
				end
			end
			
			# Error returned when the opentest url is not defined
			class OpentestUrlUndefinedError < StandardError
			end
			
			class OpentestTokenUndefinedError < StandardError
			end
		
		end
	end
end
